#
#
# Credit: https://kev.inburke.com/kevin/profiling-zsh-startup-time/
PROFILE_STARTUP=false
if [[ "$PROFILE_STARTUP" == true ]]; then
    zmodload zsh/zprof # Output load-time statistics
    # http://zsh.sourceforge.net/Doc/Release/Prompt-Expansion.html
    PS4=$'%D{%M%S%.} %N:%i> '
    exec 2>"${XDG_CACHE_HOME:-$HOME/tmp}/zsh_statup.$$"
    setopt xtrace prompt_subst
fi

# The following lines were added by compinstall
zstyle ':completion:*' completer _expand _complete _ignored _correct _approximate
zstyle ':completion:*' max-errors 2
zstyle :compinstall filename "$HOME/.zshrc"

# export fpath=(~/.local/share/zsh-completions $fpath)

# Load Completions
autoload -Uz compinit

re_initialize=0
for match in ${ZDOTDIR}/.zcompdump*(.Nmh+24); do
  re_initialize=1
  break
done

autoload -Uz compinit
typeset -i updated_at=$(date +'%j' -r ~/.zcompdump 2>/dev/null || stat -f '%Sm' -t '%j' ~/.zcompdump 2>/dev/null)
if [ $(date +'%j') != $updated_at ]; then
  compinit -i
else
  compinit -C -i
fi

unset updated_at

# End of lines added by compinstall
# Lines configured by zsh-newuser-install
HISTFILE=~/.histfile
HISTSIZE=10000
SAVEHIST=10000
setopt appendhistory sharehistory incappendhistory autocd extendedglob
unsetopt beep
bindkey -v
# End of lines configured by zsh-newuser-install

# Use histdb timer to time each command
autoload -Uz add-zsh-hook
add-zsh-hook precmd  histdb-update-outcome
# bash style word delimiter for <C>-w
autoload -U select-word-style
select-word-style bash

# Souce system wide configuration
source /etc/profile
export DOTFILES="$HOME/dotfiles"
# Source zsh plugins
# This needs to be a standard source for some reason
source "$DOTFILES/zsh/sourceables.sh"
# this includes the source_file function
source "$DOTFILES/bash/environment.bash"
# Aliases
source_file "$DOTFILES/bash/aliases.bash"
# Set RPROMPT when in vim mode
source_file "$DOTFILES/zsh/vi-mode.zsh"

# set TERM appropriately
if [[ "$TERM" == "tmux-256color" ]] && [[ $(tmux -V | awk "{print $2}") < 2 ]]; then
    export TERM="screen-256color"
fi

# Turn off system colours as they have a habit of ruining things
export LS_COLORS=

# Add tab completion for SSH hostnames based on ~/.ssh/config, ignoring wildcards
if [[ -f $HOME/.ssh/config ]]; then
  hosts=($(egrep '^Host.*' $HOME/.ssh/config | awk '{print $2}' | grep -v '^*' | sed -e 's/\.*\*$//'))
  zstyle ':completion:*:hosts' hosts $hosts
fi

# Use histdb timer to time each command
autoload -Uz add-zsh-hook
add-zsh-hook precmd  histdb-update-outcome

# Use histdb for zsh autosuggestions, with the top result being directory dependent
_zsh_autosuggest_strategy_histdb_top_here() {
    local query="select commands.argv from
history left join commands on history.command_id = commands.rowid
left join places on history.place_id = places.rowid
where places.dir LIKE '$(sql_escape $PWD)%'
and commands.argv LIKE '$(sql_escape $1)%'
group by commands.argv order by count(*) desc limit 1"
    suggestion=$(_histdb_query "$query")
}

ZSH_AUTOSUGGEST_STRATEGY=histdb_top_here

# setup prompt
autoload -U promptinit; promptinit
# Prompt is sourced so no need for `prompt pure`
# This also means that only a single prompt can be loaded at once

# Time before prompt displays execution time
PURE_CMD_MAX_EXEC_TIME=10
# The default symbol doesn't work with Iosevka
# PURE_PROMPT_SYMBOL=âŒª

# fzf configuratioin
source_file "$HOME/.fzf.zsh"
if hash rg 2> /dev/null; then
    # Use ripgrep for fzf search
    export FZF_DEFAULT_COMMAND='rg --files --no-ignore --hidden --follow -g "!{.git,node_modules}/*" 2> /dev/null'
    # Use ripgrep for ctrl-T search
    export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"
fi

# Use neovim-remote when in a neovim buffer
if [ -n "$NVIM_LISTEN_ADDRESS" ]; then
    alias_function "nvim" "nvr"
fi


# Have consistent location for forwarded ssh authentication socket
if [[ "$SSH_AUTH_SOCK" == /tmp/* ]]; then
    ln -sf "$SSH_AUTH_SOCK" "$HOME/.ssh/ssh-agent-sock"
    export SSH_AUTH_SOCK="$HOME/.ssh/ssh-agent-sock"
elif [[ "$SSH_AUTH_SOCK" == /run/* ]]; then
    ln -sf "$SSH_AUTH_SOCK" "$HOME/.ssh/ssh-agent-sock"
    export SSH_AUTH_SOCK="$HOME/.ssh/ssh-agent-sock"
fi

# update PATH for google cloud SDK
source_file "$HOME/.local/google-cloud-sdk/path.zsh.inc"
# enable shell completion for gcloud
source_file "$HOME/.local/google-cloud-sdk/completion.zsh.inc"
# Source local changes
source_file "$HOME/.bashrc.local"
# Source travis config
source_file "$HOME/.travis/travis.sh"
# Allow conda to manage environment activation
# source "$HOME/.miniconda/etc/profile.d/conda.sh"

# Source pyenv if present
if hash pyenv 2>/dev/null; then
    function load_pyenv() {
        eval "$(pyenv init -)"
        eval "$(pyenv virtualenv-init -)"
    }
    alias pyenv='unalias pyenv && load_pyenv && pyenv'
fi

# Source direnv
# if hash direnv; then
    # eval "$(direnv hook zsh)"
# fi

if hash thefuck; then
    function load_thefuck() {
        eval $(thefuck --alias)
    }
    alias fuck='unalias fuck && load_thefuck && fuck'
fi

if [[ "$PROFILE_STARTUP" == true ]]; then
    zprof
    unsetopt xtrace
    exec 2>&-
fi
